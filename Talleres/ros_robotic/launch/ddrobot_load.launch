<?xml version="1.0"?>
<launch>

    <!-- We resume the logic in gazebo_ros package empty_world.launch, -->
    <!-- changing only the name of the world to be launched -->
    <arg name="model" default="$(find ros_robotic)/urdf/dd_robot.urdf"/>
    
    <!-- Parse of Model -->
    <param 
        name="robot_description" 
        command="$(find xacro)/xacro $(arg model)"
    />
    
    <!-- Robot_state_publisher -->
    <!-- Publica las transformaciones entre marcos de referencia fijos -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="rob_pub" />

    <!-- RViz-->
    <!-- <node pkg="rviz" type="rviz" name="rviz" />-->

    <!-- ///////////////////////////////////////////////////////////////      -->
    <!-- Controller Manager -->
    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam 
        file="$(find ros_robotic)/config/ddrobot_ctroller.yaml" 
        command="load"
    />

    <!-- load the controllers -->
    <node 
        name="spawner_ctrols" 
        pkg="controller_manager" 
        type="spawner" 
        respawn="false"
        output="screen"
        args="  joint_state_controller
                left_wheel_ctrl
                right_wheel_ctrl"
    />

    <!-- ///////////////////////////////////////////////////////////////      -->
    <!-- Init Gazebo  -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="use_sim_time" value="true"/>
    </include> 

    <!-- Spawn of robot inside Gazebo -->
    <node 
        pkg="gazebo_ros" 
        type="spawn_model" 
        name="spawn_robot"
        respawn="false"
        args="  -param robot_description
                -urdf
                -model robot_prueba"
    />

</launch>
