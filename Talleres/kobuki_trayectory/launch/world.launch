<!-- Launches Kobuki Gazebo simulation in an empty world -->
<launch>
    <arg name="world_empty" default="$(find kobuki_trayectory)/worlds/target.world"/>
    <arg name="world_laberinto" default="$(find kobuki_trayectory)/worlds/taller2.world"/>

    <!-- ************************************************************************ -->
    <!-- Launch Gazebo-->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_laberinto)"/> 
        <arg name="use_sim_time" value="true"/>
        <arg name="debug" value="false"/>
        <arg name="paused" value="false"/>
    </include>

    <!-- ************************************************************************ -->
    <!-- Spawn Robot-->
    
    <!-- Robot initial pose (TENER EN CUENTA QUE COINCIDA CON LO QUE ESTÃ‰ EN PARAMETERS.YAML)-->
    <arg name="x" default="-3.5"/>
    <arg name="y" default="0.0"/>
    <arg name="z" default="0.01"/>
    <arg name="roll" default="0.0"/>
    <arg name="pitch" default="0.0"/>
    <arg name="yaw" default="$(eval -90 * 3.141592 / 180.0)"/>

    <arg name="robot_name" value="kobuki"/>

    <rosparam file="$(find kobuki_trayectory)/config/parameters.yaml" command="load" />

    <param 
        name="robot_description" 
        command="$(find xacro)/xacro '$(find kobuki_trayectory)/urdf/kobuki_camera.urdf.xacro'"/>

    <node pkg="gazebo_ros" type="spawn_model" name="spawn_$(arg robot_name)"
        args="-x $(arg x) -y $(arg y) -z $(arg z)
            -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)
            -urdf -param robot_description 
            -model $(arg robot_name)"
            respawn="false">
    </node>

    <!-- ************************************************************************ -->
    <node 
        pkg="robot_state_publisher" 
        type="robot_state_publisher" 
        name="robot_state_publisher" 
        output="screen">
    </node>

    <node 
        pkg="kobuki_trayectory" 
        type="controlador_node.py" 
        name="Controlador" 
        output="screen">              
    </node>

    <node 
        pkg="kobuki_trayectory" 
        type="TF_node.py" 
        name="TF" 
        output="screen">        
    </node>
</launch>